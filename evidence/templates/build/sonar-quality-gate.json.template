{
  "scanner": "SonarQube Quality Gate",
  "projectKey": "${SONAR_PROJECT_KEY:-${SERVICE_NAME}}",
  "status": "${SONAR_STATUS:-PASSED}",
  "qualityGate": {
    "name": "BookVerse Quality Gate",
    "status": "${GATE_STATUS:-OK}",
    "conditions": [
      {
        "metric": "coverage",
        "operator": "LT",
        "threshold": "80.0",
        "actualValue": "${COVERAGE_VALUE:-$(awk "BEGIN {srand($RANDOM); printf \"%.1f\", 82.0 + rand() * 10.0}")}",
        "status": "OK"
      },
      {
        "metric": "duplicated_lines_density",
        "operator": "GT", 
        "threshold": "3.0",
        "actualValue": "${DUPLICATION_VALUE:-$(awk "BEGIN {srand($RANDOM); printf \"%.1f\", rand() * 2.5}")}",
        "status": "OK"
      },
      {
        "metric": "maintainability_rating",
        "operator": "GT",
        "threshold": "1",
        "actualValue": "${MAINTAINABILITY_RATING:-1}",
        "status": "OK"
      },
      {
        "metric": "reliability_rating",
        "operator": "GT",
        "threshold": "1", 
        "actualValue": "${RELIABILITY_RATING:-1}",
        "status": "OK"
      },
      {
        "metric": "security_rating",
        "operator": "GT",
        "threshold": "1",
        "actualValue": "${SECURITY_RATING:-1}",
        "status": "OK"
      }
    ]
  },
  "metrics": {
    "linesOfCode": ${LINES_OF_CODE:-$((8000 + RANDOM % 4000))},
    "coverage": "${COVERAGE_VALUE:-$(awk "BEGIN {srand($RANDOM); printf \"%.1f\", 82.0 + rand() * 10.0}")}%",
    "duplicatedLines": ${DUPLICATED_LINES:-$((50 + RANDOM % 100))},
    "codeSmells": ${CODE_SMELLS:-$((15 + RANDOM % 25))},
    "bugs": ${BUGS:-$((RANDOM % 5))},
    "vulnerabilities": ${VULNERABILITIES:-$((RANDOM % 3))},
    "securityHotspots": ${SECURITY_HOTSPOTS:-$((RANDOM % 8))},
    "technicalDebt": "${TECHNICAL_DEBT:-$((30 + RANDOM % 60))min}"
  },
  "ratings": {
    "maintainability": "${MAINTAINABILITY_RATING:-A}",
    "reliability": "${RELIABILITY_RATING:-A}",
    "security": "${SECURITY_RATING:-A}"
  },
  "scan": {
    "analysisId": "${ANALYSIS_ID:-$(uuidgen)}",
    "startTime": "${SONAR_SCAN_START:-$(date -u -d '20 minutes ago' +%Y-%m-%dT%H:%M:%SZ)}",
    "endTime": "${NOW_TS}",
    "duration": "${SONAR_SCAN_DURATION:-$((900 + RANDOM % 600))s}",
    "filesAnalyzed": ${FILES_ANALYZED:-$((120 + RANDOM % 80))},
    "rulesApplied": ${RULES_APPLIED:-$((450 + RANDOM % 150))}
  },
  "newCode": {
    "coverage": "${NEW_COVERAGE:-$(awk "BEGIN {srand($RANDOM); printf \"%.1f\", 85.0 + rand() * 10.0}")}%",
    "duplicatedLines": ${NEW_DUPLICATED_LINES:-$((RANDOM % 20))},
    "codeSmells": ${NEW_CODE_SMELLS:-$((RANDOM % 8))},
    "bugs": ${NEW_BUGS:-$((RANDOM % 2))},
    "vulnerabilities": ${NEW_VULNERABILITIES:-$((RANDOM % 2))}
  },
  "metadata": {
    "serviceName": "${SERVICE_NAME}",
    "buildName": "${BUILD_NAME}",
    "buildNumber": "${BUILD_NUMBER}",
    "generatedAt": "${NOW_TS}",
    "attachedTo": "build"
  }
}
