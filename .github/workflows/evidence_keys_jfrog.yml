name: Upload Evidence Key to JFrog Platform

on:
  workflow_dispatch:
    inputs:
      public_key_content:
        description: 'Public Key Content (PEM format)'
        required: true
        type: string
      key_alias:
        description: 'Key Alias'
        required: false
        default: 'bookverse_evidence_key'
        type: string

env:
  KEY_ALIAS: ${{ inputs.key_alias || 'bookverse_evidence_key' }}

jobs:
  upload_public_key:
    runs-on: ubuntu-latest
    name: Upload Public Key to JFrog Platform
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JFROG_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JFROG_ADMIN_TOKEN }}

      - name: Validate public key input
        run: |
          echo "🔍 Validating public key input..."
          
          # Create temporary public key file
          printf '%s\n' '${{ inputs.public_key_content }}' > public.pem
          
          # Validate public key format
          if ! openssl pkey -in public.pem -pubin -check -noout 2>/dev/null; then
            echo "❌ Invalid public key format"
            exit 1
          fi
          
          echo "✅ Public key validation successful"
          
          # Get key information
          KEY_INFO=$(openssl pkey -in public.pem -pubin -text -noout 2>/dev/null | head -1)
          echo "🔑 Key type: $KEY_INFO"

      - name: Upload public key to JFrog Platform
        run: |
          echo "📤 Uploading public key to JFrog Platform trusted keys..."
          
          # Prepare public key content (remove headers/footers and newlines)
          PUBLIC_KEY_B64=$(grep -v "BEGIN\|END" public.pem | tr -d '\n')
          
          # Create JSON payload
          cat > trusted_key_payload.json << EOF
          {
            "alias": "${{ env.KEY_ALIAS }}",
            "public_key": "$PUBLIC_KEY_B64"
          }
          EOF
          
          # Upload to JFrog Platform
          RESPONSE=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Authorization: Bearer ${{ secrets.JFROG_ADMIN_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @trusted_key_payload.json \
            "${{ secrets.JFROG_URL }}/artifactory/api/security/keys/trusted" \
            -o response.json)
          
          HTTP_CODE="${RESPONSE: -3}"
          
          if [[ "$HTTP_CODE" == "200" ]] || [[ "$HTTP_CODE" == "201" ]]; then
            echo "✅ Public key uploaded successfully to JFrog Platform"
            echo "📋 Response:"
            cat response.json | jq '.' 2>/dev/null || cat response.json
          else
            echo "❌ Failed to upload public key (HTTP $HTTP_CODE)"
            echo "📋 Response:"
            cat response.json
            exit 1
          fi

      - name: Verify trusted key upload
        run: |
          echo "🔍 Verifying trusted key upload..."
          
          # List trusted keys to verify upload
          RESPONSE=$(curl -s -w "%{http_code}" \
            -X GET \
            -H "Authorization: Bearer ${{ secrets.JFROG_ADMIN_TOKEN }}" \
            "${{ secrets.JFROG_URL }}/artifactory/api/security/keys/trusted" \
            -o trusted_keys.json)
          
          HTTP_CODE="${RESPONSE: -3}"
          
          if [[ "$HTTP_CODE" == "200" ]]; then
            echo "📋 Current trusted keys:"
            cat trusted_keys.json | jq '.' 2>/dev/null || cat trusted_keys.json
            
            # Check if our key is in the list
            if cat trusted_keys.json | jq -r '.[].alias' | grep -q "${{ env.KEY_ALIAS }}"; then
              echo "✅ Verified: Key '${{ env.KEY_ALIAS }}' found in trusted keys"
            else
              echo "⚠️  Warning: Key '${{ env.KEY_ALIAS }}' not found in trusted keys list"
            fi
          else
            echo "⚠️  Could not verify trusted keys (HTTP $HTTP_CODE)"
          fi

      - name: Create upload summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << 'EOF'
          # 📤 Public Key Upload Complete
          
          ## Upload Information
          - **Key Alias**: ${{ env.KEY_ALIAS }}
          - **JFrog Platform**: ${{ secrets.JFROG_URL }}
          - **Uploaded**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          
          ## ✅ Actions Completed
          - ✅ Public key validated successfully
          - ✅ Uploaded to JFrog Platform trusted keys
          - ✅ Platform verification completed
          
          ## 📋 Next Steps
          1. Update repository secrets/variables with the local script
          2. Test evidence signing with new key
          3. Verify artifact verification in pipelines
          
          ## 💡 To Update Repositories
          Use the local script to update all repositories:
          ```bash
          ./scripts/update_evidence_keys.sh \
            --private-key private.pem \
            --public-key public.pem \
            --alias "${{ env.KEY_ALIAS }}"
          ```
          
          EOF
