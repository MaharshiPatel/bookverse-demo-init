name: '🗑️ Execute Cleanup'

on:
  workflow_dispatch:
    inputs:
      confirm_cleanup:
        description: 'Type "DELETE" to confirm cleanup (this action cannot be undone)'
        required: true
        type: string
      skip_protection:
        description: 'Skip protection layer (NOT RECOMMENDED)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: latest

      - name: Configure JFrog CLI for Admin
        env:
          JFROG_URL: ${{ vars.JFROG_URL }}
          JFROG_ADMIN_TOKEN: ${{ secrets.JFROG_ADMIN_TOKEN }}
        run: |
          jfrog config add bookverse-admin --url="$JFROG_URL" --access-token="$JFROG_ADMIN_TOKEN" --interactive=false --overwrite
          jfrog config use bookverse-admin

      - name: Validate cleanup report freshness
        env:
          JFROG_URL: ${{ vars.JFROG_URL }}
          JFROG_ADMIN_TOKEN: ${{ secrets.JFROG_ADMIN_TOKEN }}
          PROJECT_KEY: 'bookverse'
        run: |
          bash ./.github/scripts/setup/validate_cleanup_report.sh

      - name: Execute cleanup from report
        env:
          JFROG_URL: ${{ vars.JFROG_URL }}
          JFROG_ADMIN_TOKEN: ${{ secrets.JFROG_ADMIN_TOKEN }}
          PROJECT_KEY: 'bookverse'
          SKIP_PROTECTION: ${{ github.event.inputs.skip_protection }}
        run: |
          bash ./.github/scripts/setup/cleanup_from_report.sh

      - name: 📋 Execute Cleanup Summary
        if: always()
        run: |
          echo "## 🗑️ Cleanup Execution Report" >> $GITHUB_STEP_SUMMARY
          if [[ -f ".github/cleanup-report.json" ]]; then
            echo "Status: $(jq -r '.status' .github/cleanup-report.json)" >> $GITHUB_STEP_SUMMARY
            echo "Total items: $(jq -r '.metadata.total_items' .github/cleanup-report.json)" >> $GITHUB_STEP_SUMMARY
          fi
