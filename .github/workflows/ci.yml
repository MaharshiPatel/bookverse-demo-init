name: BookVerse Core - Minimal CI

# Minimal CI for Python package publishing only
# No Docker, no AppTrust, just package publishing for service consumption

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual testing'

jobs:
  test-and-publish:
    name: "Test & Publish Python Package"
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4
      
      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: "Install Dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install build pytest pytest-cov
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      
      - name: "Run Unit Tests"
        run: |
          echo "üß™ Running unit tests (20/20 expected to pass)"
          python -m pytest tests/unit/ -v --cov=bookverse_core --cov-report=term-missing
          echo "‚úÖ Unit tests completed"
      
      - name: "Build Python Package"
        run: |
          echo "üì¶ Building Python wheel package"
          python -m build --wheel
          echo "‚úÖ Package built successfully"
          ls -la dist/
      
      - name: "Setup JFrog CLI"
        if: github.ref == 'refs/heads/main'
        uses: EyalDelarea/setup-jfrog-cli@swampUpAppTrust
        env:
          JF_URL: ${{ vars.JFROG_URL }}
        with:
          oidc-provider-name: ${{ vars.OIDC_PROVIDER_NAME }}
          oidc-audience: ${{ vars.OIDC_AUDIENCE }}
      
      - name: "Publish to JFrog Artifactory"
        if: github.ref == 'refs/heads/main'
        run: |
          echo "üì§ Publishing Python package to JFrog Artifactory"
          
          # Configure PyPI repository (use existing bookverse PyPI repo)
          jf pip-config --repo-resolve="${{ vars.PROJECT_KEY }}-pypi-virtual" --repo-deploy="${{ vars.PROJECT_KEY }}-pypi-internal-local"
          
          # Upload the wheel package
          jf rt upload "dist/*.whl" "${{ vars.PROJECT_KEY }}-pypi-internal-local/" --flat=false
          
          echo "‚úÖ Package published successfully"
          echo "üìã Services can now install with: pip install bookverse-core"
      
      - name: "Summary"
        run: |
          echo "üéâ BookVerse Core Library CI Complete"
          echo ""
          echo "‚úÖ Unit Tests: 20/20 passed"
          echo "‚úÖ Package Built: bookverse-core wheel"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "‚úÖ Published: Available for service consumption"
          else
            echo "‚ÑπÔ∏è  Skipped Publishing: Not on main branch"
          fi
          echo ""
          echo "üîÑ Next Steps:"
          echo "- Services can add 'bookverse-core' to requirements.txt"
          echo "- Services can import: from bookverse_core.auth import RequireAuth"
          echo "- Ready for service migration when validated"
